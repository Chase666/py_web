"""adding reviews

Revision ID: f522d796fab1
Revises: 
Create Date: 2023-06-28 15:28:46.202143

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f522d796fab1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rstatuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_rstatuses'))
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('rtext', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name=op.f('fk_reviews_book_id_books')),
    sa.ForeignKeyConstraint(['status_id'], ['rstatuses.id'], name=op.f('fk_reviews_status_id_rstatuses')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_reviews_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_reviews'))
    )
    op.drop_table('roles')
    with op.batch_alter_table('books_genres', schema=None) as batch_op:
        batch_op.drop_constraint('fk_books_genres_book_id_books', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_books_genres_book_id_books'), 'books', ['book_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('lastname',
               existing_type=mysql.VARCHAR(length=88),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=88),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('surname',
               existing_type=mysql.VARCHAR(length=88),
               type_=sa.String(length=100),
               nullable=True)
        batch_op.alter_column('login',
               existing_type=mysql.VARCHAR(length=88),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('role_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('phash',
               existing_type=mysql.VARCHAR(length=512),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_users_login'), ['login'])
        batch_op.drop_constraint('users_ibfk_1', type_='foreignkey')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_foreign_key('users_ibfk_1', 'roles', ['role_id'], ['id'])
        batch_op.drop_constraint(batch_op.f('uq_users_login'), type_='unique')
        batch_op.alter_column('phash',
               existing_type=sa.String(length=200),
               type_=mysql.VARCHAR(length=512),
               existing_nullable=False)
        batch_op.alter_column('role_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('login',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=88),
               existing_nullable=False)
        batch_op.alter_column('surname',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=88),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=88),
               existing_nullable=False)
        batch_op.alter_column('lastname',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=88),
               existing_nullable=False)

    with op.batch_alter_table('books_genres', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_books_genres_book_id_books'), type_='foreignkey')
        batch_op.create_foreign_key('fk_books_genres_book_id_books', 'books', ['book_id'], ['id'], ondelete='CASCADE')

    op.create_table('roles',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('name', mysql.VARCHAR(length=88), nullable=False),
    sa.Column('description', mysql.TEXT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.drop_table('reviews')
    op.drop_table('rstatuses')
    # ### end Alembic commands ###
